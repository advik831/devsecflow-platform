#!/bin/bash

# DevOps Platform - Local Development Setup
# This script sets up a local PostgreSQL database using Docker

set -e

echo "🚀 Setting up DevOps Platform for local development..."
echo ""

# Check if Docker is installed
if ! command -v docker &> /dev/null; then
    echo "❌ Docker is not installed. Please install Docker first:"
    echo "   https://docs.docker.com/get-docker/"
    exit 1
fi

# Check if Docker Compose is available
if ! docker compose version &> /dev/null && ! docker-compose --version &> /dev/null; then
    echo "❌ Docker Compose is not available. Please install Docker Compose:"
    echo "   https://docs.docker.com/compose/install/"
    exit 1
fi

# Determine which docker compose command to use
DOCKER_COMPOSE_CMD="docker compose"
if ! docker compose version &> /dev/null; then
    DOCKER_COMPOSE_CMD="docker-compose"
fi

echo "📦 Using: $DOCKER_COMPOSE_CMD"
echo ""

# Stop any existing containers
echo "🛑 Stopping any existing containers..."
$DOCKER_COMPOSE_CMD -f docker-compose.local.yml down --remove-orphans

# Start PostgreSQL
echo "🐘 Starting PostgreSQL database..."
$DOCKER_COMPOSE_CMD -f docker-compose.local.yml up -d postgres

# Wait for database to be ready
echo "⏳ Waiting for database to be ready..."
timeout=60
counter=0
while ! docker exec devops-platform-db pg_isready -U postgres -d devops_platform &> /dev/null; do
    if [ $counter -ge $timeout ]; then
        echo "❌ Database failed to start within $timeout seconds"
        echo "📋 Container logs:"
        $DOCKER_COMPOSE_CMD -f docker-compose.local.yml logs postgres
        exit 1
    fi
    printf "."
    sleep 2
    counter=$((counter + 2))
done

echo ""
echo "✅ PostgreSQL database is ready!"
echo ""

# Create .env.local file
echo "📄 Creating local environment configuration..."
cat > .env.local << EOF
# DevOps Platform - Local Development Environment
# Generated by setup-local.sh

# Database Configuration (Local PostgreSQL)
DATABASE_URL=postgresql://postgres:devops123@localhost:5432/devops_platform
DATABASE_MODE=bundled
DB_HOST=localhost
DB_PORT=5432
DB_NAME=devops_platform
DB_USER=postgres
DB_PASSWORD=devops123
DB_SSL=false

# Application Configuration
NODE_ENV=development
PORT=5000
SESSION_SECRET=local-dev-session-secret-not-for-production

# Database Migrations
RUN_MIGRATIONS=true

# GitHub Integration (Optional)
# GITHUB_CLIENT_ID=your_client_id
# GITHUB_CLIENT_SECRET=your_client_secret
EOF

echo "✅ Created .env.local with database configuration"
echo ""

# Install dependencies if needed
if [ ! -d "node_modules" ]; then
    echo "📦 Installing dependencies..."
    npm install
fi

echo "🎉 Local development setup complete!"
echo ""
echo "📋 Next steps:"
echo "   1. Run: node scripts/dev-local.js"
echo "   2. Open: http://localhost:5000"
echo ""
echo "🛠️  Available commands:"
echo "   node scripts/dev-local.js              - Start development server with local DB"
echo "   docker compose -f docker-compose.local.yml down    - Stop local database"
echo "   docker compose -f docker-compose.local.yml restart postgres - Restart local database"
echo "   docker compose -f docker-compose.local.yml logs postgres    - View database logs"
echo ""
echo "💡 Your local PostgreSQL database is running on port 5432"
echo "   Connection: postgresql://postgres:devops123@localhost:5432/devops_platform"